class Solution {
public:
    vector<vector<string>>result;//结果数组
    vector<vector<string>> solveNQueens(int n) {
        string s="";
        vector<int>record(n);
        for(int i=0;i<n;i++)
        {
            s+='.';
        }
        vector<string>temp(n,s);//临时解
        dfs(0,n,temp,record);//递归
        return result;
    }
    void dfs(int x,int n,vector<string>&temp,vector<int> &record)
    {
        if(x==n)
        {
            result.push_back(temp);
            return ;
        }
        for(int i=0;i<n;i++)
        {
            record[x]=i;
            if(mark(record,x))//判断是否符合
            {
                temp[x][i]='Q';
                dfs(x+1,n,temp,record);
                temp[x][i]='.';
            }
        }
    }
    bool mark(vector<int>&record,int x)
    {
        for(int i=0;i<x;i++)
        {
            if(record[i]==record[x]||x-record[x]==i-record[i]||x+record[x]==i+record[i])
            return false;
        }
        return true;
    }
};